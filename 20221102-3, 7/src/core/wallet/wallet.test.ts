// 지갑 구성
// 비밀키, 공개키, 서명
// 지갑 주소 / 계정 만들기

// 비밀키랑 공개와 서명을 이용한 신원 인증 방식은 분산원장이라는 이해가 필요

// 분산원장 : 복제 공유 동기화된 데이터에 대한 합의 기술

// 금융 쪽에서는 장부를 가지고 모든 거래내역을 기록하는 방식
// 은행이라는 금융기관은 장부에 거래를 의존할 수 밖에 없는 중앙 집권화 방식

// 분산원장은 이것과 반대로 거래에 참여하는 모든 참여자들이 장부를 가지고 있고
// 거래가 발생했을 때 해당 거래내역을 각자의 장부에 기록하는 방식
// 중앙에서만 가지고 있는게 아니라 모든 장부를 가지고 있음

// 신원 인증 방식 분산원장 기술로 비밀키, 공개키, 서명

// 암호화 방식

// 대칭형 : 암호화 복호화할 때 사용하는 키가 동일한 경우 1개를 사용함
//         암호화한 사람과 수신하는 사람 또한 같은 키를 가지고 있어야 함
// 비대칭형 : 사용하는 키와 복호화할 때 사용하는 키가 다름
//           다른 사람에게 절대 공개 X (비밀키) 비밀키를 토대로 만든 공개키가 한쌍
//           결론은 키를 2개 사용

// 공개키 : 사람들에게 공개할 키(정보 암호화 가능)
// 비밀키 : 사용자만 알아야하는 키(암호를 풀 수 있는 키)

// 대칭형
// 나 -> 대칭형으로 암호화 -> 암호문
// 너 -> 암호문 -> 대칭키로 복호화 -> 원본
// 대칭형의 형태는 암호문을 대칭키를 가지고 있는 사람은 누구나 전달 가능

// 비대칭형 키의 경우는 암호화할 때 공개키로 암호화하고
// 나 -> 원본 -> 너의 공개키로 암호화 -> 암호문
// 너 -> 암호문 -> 너의 비밀키로 복호화 -> 원본

// 비밀키의 소유자가 비밀키로 데이터를 암호화하고 공개키와 함께 전달
// 공개키와 데이터를 획득한 사람은 공개키를 이용해서 복호화가 가능
// 위험성이 있지만 이 방법을 사용하는 이유는
// 데이터의 보호 목적보다는 공개키 데이터 제공한 사람의 신원을 보장해주는 때문
// 암호화된 데이터가 공개키로 복호화 된다는 것이 공개키와 쌍으로 이루는 비밀키에 의해서
// 암호화가 되었다는 뜻이기 때문에 데이터 제공자가 맞는 확인할 수 있어 신원이 보장됨
// 이 방법이 공인 인증 체계의 기본 바탕인 전자서명

// 1. 암호화하고 싶은 데이터를 SHA256 방식으로 해싱하고
// 2. 개인키를 사용해서 해시값으로 서명을 만들고
// 3. 서명이랑 공개키를 제 3자에게 전달
// 4. 제 3자는 공개키를 이용해서 서명을 복호화
// 5. 복호화한 해시값과 데이터를 해싱해서 나온 값이 맞는지 확인
